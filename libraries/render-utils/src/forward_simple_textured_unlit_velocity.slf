<@include gpu/Config.slh@>
<$VERSION_HEADER$>
// <$_SCRIBE_FILENAME$> 
// Generated on <$_SCRIBE_DATE$>
//
//  Created by Olivier Prat on 10/25/18.
//  Copyright 2018 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include LightingModel.slh@>
<@include gpu/Color.slh@>

<@include render-utils/ShaderConstants.h@>

layout(location=0) out vec4 _lighting;
layout(location=1) out vec4 _velocity;

layout(location=RENDER_UTILS_ATTR_POSITION_CS) in vec4 _positionCS;
layout(location=RENDER_UTILS_ATTR_PREV_POSITION_CS) in vec4 _prevPositionCS;

<@include VelocityWrite.slh@>

// the albedo texture
LAYOUT(binding=0) uniform sampler2D originalTexture;

layout(location=RENDER_UTILS_ATTR_COLOR) in vec4 _color;
layout(location=RENDER_UTILS_ATTR_TEXCOORD01) in vec4 _texCoord01;
#define _texCoord0 _texCoord01.xy
#define _texCoord1 _texCoord01.zw

void main(void) {
    vec4 texel = texture(originalTexture, _texCoord0.st);
    float colorAlpha = _color.a * texel.a;

    vec4 color = vec4(_color.rgb * texel.rgb * isUnlitEnabled(), colorAlpha);

    packDeferredFragmentLighting(_positionCS, _prevPositionCS, color);
}