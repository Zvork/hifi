<!
//  skybox.slh
//
//  Created by Olivier Prat on 5/29/2018.
//  Copyright 2018 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
!>
<@if not SKYBOX_SLH@>
<@def SKYBOX_SLH@>

<@include graphics/ShaderConstants.h@>
layout(binding=GRAPHICS_TEXTURE_SKYBOX) uniform samplerCube cubeMap;

struct Skybox {
    vec4 color;
};

layout(binding=GRAPHICS_BUFFER_SKYBOX_PARAMS) uniform skyboxBuffer {
    Skybox skybox;
};

layout(location=0) in vec3 _normal;

vec3 computeSkyColor() {
    vec3 coord = normalize(_normal);
    vec3 color = skybox.color.rgb;

    // blend is only set if there is a cubemap
    if (skybox.color.a > 0.0) {
        color = texture(cubeMap, coord).rgb;
        if (skybox.color.a < 1.0) {
            color *= skybox.color.rgb;
        }
    }

    return color;
}

<@endif@>